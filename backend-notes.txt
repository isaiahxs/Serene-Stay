This is the beginning of the AirBnB project.

API Docs and KB Cards:
https://github.com/appacademy/assessment-for-sprint-13-api-documentation-airbnb

ROADMAP BELOW:
https://open.appacademy.io/learn/js-py---pt-aug-2022-online/week-23---project-planning--security--authentication/roadmap

----------------------------------------------------------------------

IN PROGRESS:

WK24D4
    -Implement backend authentication endpoints
    -API Documentation should be approved by your Project Advisor
    -Database Schema should be approved by your Project Advisor
    -GitHub KanBan board should be approved by your Project Advisor

WK24D6
    -Do standup with your Project Advisor
    -Implement backend authentication endpoints

----------------------------------------------------------------------

TO DO:

WK25D1
    -Do standup with your Project Advisor
    -Deploy backend authentication endpoints
    -Implement backend endpoints for first CRUD feature

WK25D2
    -Do standup with your Project Advisor
    -Implement backend endpoints for first CRUD feature

WK25D3
    -Do standup with your Project Advisor
    -Deploy backend endpoints for first CRUD feature
    -Implement backend endpoints for second CRUD feature
    -Authentication feature should be reviewed and approved by your Project Advisor

WK25D4
    -Do standup with your Project Advisor
    -Implement backend endpoints for second CRUD feature

WK25D6
    -Do standup with your Project Advisor
    -Deploy backend endpoints for second CRUD feature
    -Implement backend endpoints for third CRUD feature
    -First feature should be reviewed and approved by your Project Advisor

WK26D1
    -Do standup with your Project Advisor
    -Deploy backend endpoints for third CRUD feature
    -Implement backend endpoints for fourth CRUD feature

WK26D2
    -Do standup with your Project Advisor
    -Implement backend endpoints for fourth CRUD feature
    -Second feature should be reviewed and approved by your Project Advisor

WK26D3
    -Do standup with your Project Advisor
    -Deploy backend endpoints for fourth CRUD feature
    -Check that all the implemented endpoints align with API documentation specs

WK26D4
    -Do standup with your Project Advisor
    -Third feature should be reviewed and approved by your Project Advisor (optional)

WK26D6
    -Do standup with your Project Advisor
    -Clean up code
    -Write notes that help you remember code in application
    -Fix bugs
    -Remove console.logs and debuggers
    -Prepare your presentation
    -Practice your presentation
    -Deploy backend endpoints one last time before presentations
    -Fourth feature should be reviewed and approved by your Project Advisor

WK27D1
    -Don't deploy to the application!!!
    -Present your project to a group of students and your Project Advisor

----------------------------------------------------------------------

DONE:

WK23D1
    -Learn about Agile methodology and the SCRUM development process
    -Understand the goals of the project
    -Understand the how to execute the required planning documentation
    -Review each project in the given list of available projects

WK23D2
    -Choose a project from the given list of available projects
    -Project Advisor will approve the chosen project
    -Create a GitHub repository for your project
    -Create a GitHub KanBan project board on the GitHub repository for the backend
    -Add your Project Advisor as an admin to the backend repository
    -Create a folder called backend at the root directory of the -GitHub repository
    -Copy API Documentation for chosen project in the README.md file in the backend folder, commit, then push to GitHub

WK23D4
    -Fill out API Documentation for chosen project in the README.md file, commit, then push to GitHub
    -Add image of your proposed database schema in the README.md file, commit, then push to GitHub
    -Add all tasks to your GitHub KanBan project board
    -API Documentation should be reviewed by your Project Advisor
    -Database Schema should be reviewed by your Project Advisor

WK23D6
    -Apply changes to API Documentation from Project Advisor's review of the README.md file, commit, then push to GitHub
    -Apply changes to the database schema from Project Advisor's review of the README.md file, commit, then push to GitHub


Push for 2/4/23
Push for 2/5/23
Push for 2/7/23


Backend Login Flow
-The API login route will be hit with a request body holding a valid credential (either username or email) and password combination.
-The API login handler will look for a User with the input credential in either the username or email columns.
-Then the hashedPassword for that found User will be compared with the input password for a match.
-If there is a match, the API login route should send back a JWT in an HTTP-only cookie and a response body. The JWT and the body will hold the user's id, username, and email.


Backend Sign-up Flow
-The API signup route will be hit with a request body holding a username, email, and password.
-The API signup handler will create a User with the username, an email, and a hashedPassword created from the input password.
-If the creation is successful, the API signup route should send back a JWT in an HTTP-only cookie and a response body. The JWT and the body will hold the user's id, username, and email.


Backend Logout Flow
-The API logout route will be hit with a request.
-The API logout handler will remove the JWT cookie set by the login or signup API routes and return a JSON success message.

Completed Phase 3
Completed Phase 4
Completed Phase 5. Need to run a few more checks on firstName and lastName section though.

Push for 2/9/23






Deployment failed. These are the changes I'm making:

- added production key including internal database url for Postgres in backend/config/index.js
- removed 'test' line from scripts section in /package.json
- checked psql-setup-script.js file and it looks good
    - checked backend/package.json file and build command looks good
- looks like I still have the test thing in backend/package.json, is that a problem?

- added the options code into the new migration where i was adding and removing firstName lastName columns
    - reorganized second migration with Bill's advice

//the random @type import things like in seeder file, should those be commented out or not?


Successfully completed deployment


-----------------------------------------------------------------------------------------------------------------------
Now working on models and migrations

-created tables with their names and attributes
-created assocations in the models
-edited the migration files to have the options things

think i need to add columns to Users of 'credential, password'
